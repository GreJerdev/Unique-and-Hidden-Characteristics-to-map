import mysql.connector
from mysql.connector import Error

class mySQLSoureDataManager(object):
 
    def __init__(self, configuration,logWriter=None):
        self._Configuration = configuration
        self._logWriter = logWriter

    def WriteLog(self, logLevel, message):
        if not(self._logWriter is None) :
           self._logWriter.WriteLog(logLevel,messge)
        else:
           print(message)
        
    def ExecuteQuery(self, query, args=None):
        results = list()
        try:
            cnx = mysql.connector.connect(user=self._Configuration.user, 
            password=self._Configuration.password, 
            host=self._Configuration.host, database=self._Configuration.databaseName)
            cursor = cnx.cursor()
            #self.WriteLog(3,query)
            #self.WriteLog(3,args)
            cursor.execute(query,args)
            results = list(cursor)
            cnx.commit()
           
        except Error as e:
            self.WriteLog(4, e) 
        finally:
            cursor.close()
            cnx.close()
       
        return results
    
    def CallProcWithOutParameter(self,procName,args,name):
        retVals = None
        try:
            cnx = mysql.connector.connect(user=self._Configuration.user, 
            password=self._Configuration.password, 
            host=self._Configuration.host, database=self._Configuration.databaseName)
            cursor = cnx.cursor()
            cursor = conn.cursor()
 
            result_args = cursor.callproc(procName, args)
            conn.commit()
            retVals = result_args
 
        except Error as e:
            self.WriteLog(4, e) 
             
        finally:
            cursor.close()
            conn.close()
        return retVals

    def GetListOfItems(self):
        return [10027, 10028, 10037, 10044, 10056, 10088, 10117, 10145, 10146, 10173, 10187, 10203, 10211, 10212, 10223, 10237, 10241, 10264, 10266, 10274, 10291, 10310, 10316, 10317, 10348, 10368, 10443, 10472, 10473, 10492, 10521, 10528, 10547, 10566, 10569, 10575, 10608, 10626, 10654, 10680, 10700, 10716, 10720, 10722, 10744, 10759, 10782, 10785, 10789, 10839, 10842, 10843, 10854, 10859, 10887, 10898, 10914, 10917, 10941, 10986, 10997, 11010, 11011, 11029, 11039, 11047, 11077, 11089, 11138, 11145, 11152, 11162, 11166, 11168, 11182, 11193, 11197, 11204, 11205, 11209, 11213, 11238, 11244, 11263, 11268, 11281, 11315, 11320, 11321, 11342, 11351, 11368, 11377, 11388, 11472, 11473, 11485, 11486, 11516, 11540, 11544, 11619, 11659, 11675, 11681, 11682, 11683, 11740, 11766, 11819, 11844, 11873, 11882, 11893, 11897, 11927, 11935, 11984, 11998, 12012, 12021, 12030, 12081, 12111, 12132, 12144, 12167, 12170, 12172, 12176, 12226, 12228, 12229, 12249, 12258, 12268, 12275, 12301, 12309, 12316, 12324, 12339, 12340, 12346, 12352, 12365, 12410, 12417, 12428, 12450, 12475, 12483, 12486, 12525, 12526, 12530, 12551, 12568, 12579, 12581, 12619, 12630, 12635, 12652, 12684, 12712, 12717, 12759, 12763, 12768, 12780, 12784, 12838, 12863, 12865, 12871, 12896, 12901, 12930, 12949, 12959, 130, 13014, 13019, 13042, 13053, 13057, 13063, 131, 13109, 13141, 13142, 13152, 13155, 13160, 13170, 13195, 13210, 13244, 13246, 13273, 13308, 13319, 13320, 13328, 13345, 13393, 13402, 13446, 13491, 13493, 13494, 13517, 13555, 13577, 13583, 13585, 13613, 13641, 137, 13757, 13764, 13766, 13781, 138, 13811, 13813, 13818, 13864, 13869, 13896, 139, 13913, 13915, 13926, 13953, 13958, 140, 14019, 14034, 14035, 14067, 14092, 14122, 14255, 143, 144, 145, 148, 151, 153, 155, 156, 159, 165, 166, 167, 169, 174, 175, 178, 180, 182, 184, 187, 188, 190, 192, 193, 195, 196, 198, 201, 204, 207, 212, 213, 214, 220, 222, 224, 2243, 2246, 2248, 2249, 2250, 2254, 2256, 2257, 226, 2261, 2272, 2275, 2278, 2279, 2286, 2290, 2297, 2298, 2299, 230, 2300, 2301, 2302, 2308, 2310, 2312, 2313, 2315, 2316, 2318, 2319, 2321, 2327, 2329, 2333, 2335, 2346, 2348, 235, 2356, 236, 237, 2371, 2374, 2378, 238, 2380, 2382, 2383, 2384, 2389, 2390, 2404, 2405, 2406, 2415, 2421, 2427, 2433, 2436, 2437, 245, 2453, 246, 2462, 2473, 2474, 2475, 2476, 2493, 250, 2515, 2525, 2538, 2539, 2542, 2546, 2548, 2552, 2554, 2558, 2559, 256, 2565, 2566, 2568, 2570, 2571, 2573, 2575, 2581, 259, 260, 263, 269, 270, 271, 273, 276, 279, 280, 281, 283, 286, 287, 288, 290, 291, 292, 294, 299, 300, 301, 302, 305, 309, 312, 313, 319, 321, 322, 326, 341, 342, 347, 349, 350, 351, 354, 356, 357, 364, 366, 369, 370, 371, 3740, 3741, 3742, 3744, 3745, 3746, 3748, 3749, 375, 384, 3848, 386, 387, 3878, 3883, 3896, 3898, 390, 3907, 391, 3912, 392, 3923, 393, 3939, 3941, 3943, 3945, 395, 3957, 3961, 3982, 3988, 400, 4013, 4016, 4017, 4018, 403, 4032, 4035, 4036, 4037, 404, 4056, 407, 4071, 4076, 4080, 4086, 4089, 410, 4100, 4101, 411, 4117, 414, 4156, 4164, 418, 4182, 4186, 4189, 419, 4192, 4193, 4207, 422, 4230, 4238, 426, 4263, 428, 4297, 431, 4315, 4320, 4322, 4325, 4326, 4330, 4341, 4346, 4355, 4360, 4382, 4397, 440, 4406, 4407, 4420, 444, 4447, 4473, 4485, 4488, 4505, 4509, 4530, 4536, 454, 456, 4562, 4570, 459, 4593, 460, 4654, 4659, 4663, 4695, 4731, 474, 4746, 4797, 4821, 4848, 485, 4863, 4881, 489, 4901, 4906, 4921, 4931, 4941, 4942, 495, 4965, 497, 4992, 5004, 5005, 501, 503, 5030, 5048, 5103, 5105, 5112, 515, 516, 531, 540, 542, 544, 546, 547, 548, 549, 5507, 5510, 5552, 556, 5568, 558, 5590, 5591, 5600, 5606, 5609, 561, 562, 5620, 5621, 563, 5646, 5651, 5666, 5673, 5674, 570, 5716, 5721, 5724, 577, 5777, 5805, 5858, 5868, 5874, 588, 5887, 591, 5918, 5921, 5924, 5950, 5966, 5969, 5996, 6002, 6013, 603, 6040, 605, 6071, 6078, 612, 6127, 6145, 615, 6160, 6166, 6170, 618, 6185, 619, 6197, 6198, 6201, 6206, 6207, 621, 622, 6243, 6245, 625, 6258, 626, 6268, 627, 6270, 629, 6302, 631, 6316, 632, 6321, 633, 6333, 6344, 6363, 637, 6372, 639, 6390, 6396, 6400, 642, 6421, 643, 6439, 6448, 645, 6459, 6467, 6477, 6497, 6510, 653, 6532, 657, 6570, 659, 661, 663, 664, 666, 667, 6679, 6691, 670, 6705, 6712, 6714, 6716, 676, 6764, 678, 679, 6793, 6809, 681, 6814, 6845, 685, 6857, 6868, 6878, 6879, 688, 6885, 7168, 7389, 7390, 7391, 7402, 7413, 7414, 7429, 7478, 7491, 7502, 7563, 7568, 7590, 7609, 7615, 7625, 7667, 7682, 7688, 7714, 7718, 7734, 7739, 7743, 7785, 7830, 7834, 7856, 7859, 7864, 7869, 7937, 7946, 7952, 7965, 7989, 7999, 8051, 8058, 8073, 8128, 8191, 8194, 8204, 8222, 8234, 8251, 8257, 8288, 8323, 8339, 8347, 8349, 8350, 8379, 8389, 8418, 8423, 8426, 8501, 8601, 8608, 8610, 8615, 8623, 8656, 8683, 8700, 8722, 8723, 8739, 8740, 8741, 8749, 8755, 8756, 8779, 881, 8942, 8984, 8996, 9034, 9259, 9316, 9319, 9332, 9334, 9350, 9354, 9370, 9437, 9514, 9534, 9588, 9620, 9647, 9651, 9679, 9724, 9745, 9793, 9840, 9853, 9892, 9907, 9923, 9970, 9975, 9990]
        
    def GetListOfReviewIdsByItemId(self, itemId):
        args = (str(itemId),)
        rows = self.ExecuteQuery("select id from reviews where restaurant = %s;", args)
        reviewIds = [row[0] for row in rows]
        return reviewIds
    
    def GetReviewById(self, ReviewId):
        args = (str(ReviewId),)
        rows = self.ExecuteQuery("select id, text from reviews where id = %s;", args)
        reviewsText = [(row[0], row[1]) for row in rows]
        return reviewsText
        
    
            

            
